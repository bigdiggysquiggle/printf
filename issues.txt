FAILED TESTS:\n
# TEST NUMBER (TYPE OF ARG)
  INSTRUCTION();
  1. your function ft_printf
  2. unix function printf
     (returned value) -->written on stdout<--

# 0044 (int)
  ft_printf("%#08x", 42);
  1. (    9) -->0x000002a<--
  2. (    8) -->0x00002a<--

# 0045 (int)
  ft_printf("%#-08x", 42);
  1. (    9) -->0x2a     <--
  2. (    8) -->0x2a    <--

# 0173 (int)
  ft_printf("@moulitest: %.10d", -42);
  1. (    0) --><--
  2. (   23) -->@moulitest: -0000000042<--

# 0179 (unsigned int)
  ft_printf("%u", -1);
  1. (   20) -->18446744073709551615<--
  2. (   10) -->4294967295<--

# 0180 (unsigned int)
  ft_printf("%u", 4294967295);
  1. (   20) -->18446744073709551615<--
  2. (   10) -->4294967295<--

# 0182 (unsigned int)
  ft_printf("%5u", 4294967295);
  1. (   20) -->18446744073709551615<--
  2. (   10) -->4294967295<--

# 0183 (unsigned int)
  ft_printf("%15u", 4294967295);
  1. (   20) -->18446744073709551615<--
  2. (   15) -->     4294967295<--

# 0184 (unsigned int)
  ft_printf("%-15u", 4294967295);
  1. (   20) -->18446744073709551615<--
  2. (   15) -->4294967295     <--

# 0185 (unsigned int)
  ft_printf("%015u", 4294967295);
  1. (   20) -->18446744073709551615<--
  2. (   15) -->000004294967295<--

# 0186 (unsigned int)
  ft_printf("% u", 4294967295);
  1. (   20) -->18446744073709551615<--
  2. (   10) -->4294967295<--

# 0187 (unsigned int)
  ft_printf("%+u", 4294967295);
  1. (   20) -->18446744073709551615<--
  2. (   10) -->4294967295<--

# 0194 (unsigned long)
  ft_printf("%U", 4294967295);
  1. (   20) -->18446744073709551615<--
  2. (   10) -->4294967295<--

# 0195 (unsigned long)
  ft_printf("%hU", 4294967296);
  1. (    1) -->0<--
  2. (   10) -->4294967296<--

# 0196 (unsigned long)
  ft_printf("%U", 4294967296);
  1. (    1) -->0<--
  2. (   10) -->4294967296<--
\n--------------\n
